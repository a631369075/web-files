version: '3.8'

services:
  # 前端服务（Nginx）
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - "821:80"  # 群晖访问端口：http://群晖IP
    depends_on:
      - backend  # 依赖后端服务
    restart: unless-stopped  # 群晖重启策略：失败时重启
    networks:
      - file-manager-network
    volumes:
      - /volume1/docker/web-files/cache:/var/cache/nginx  # 群晖缓存挂载（优化性能）

  # 后端服务（Flask）
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    environment:
      - SECRET_KEY=ffca0410c2b88538768d1ce1bca59aba  # 替换为：python -c "import secrets; print(secrets.token_hex(16))"
      - DEBUG=False  # 生产环境设为False，调试设为True
    volumes:
      - /volume1/docker/web-files/files:/app/files  # 群晖文件存储挂载（持久化）
      - /volume1/docker/web-files/backend:/app/backend  # 数据库持久化（避免重启丢失数据）
    restart: unless-stopped
    networks:
      - file-manager-network
    # 群晖网络适配：若无法访问，取消注释下面一行（使用主机网络）
    # network_mode: "host"

# 网络配置（桥接模式，群晖默认支持）
networks:
  file-manager-network:
    driver: bridge

# 数据卷（群晖持久化存储，避免容器删除丢失数据）
volumes:
  frontend-cache:
  file-storage:  # 存储用户上传的文件
  backend-db:    # 存储SQLite数据库文件